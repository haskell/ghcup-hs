name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  draft_release:
    name: Draft Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: true
          prerelease: false

  release-linux:
    name: Create Release x86_64
    needs: draft_release
    runs-on: ${{ matrix.os }}
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.13
      GHC_VER: 8.10.7
      CABAL_VER: 3.6.2.0
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            container: i386/alpine:3.12
            ARTIFACT: "i386-linux-ghcup"
            ARCH: 32
          - os: ubuntu-latest
            container: alpine:3.12
            ARTIFACT: "x86_64-linux-ghcup"
            ARCH: 64
    container:
      image: ${{ matrix.container }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Install system dependencies
        run: |
          apk add --no-cache \
            curl \
            gcc \
            g++ \
            binutils \
            binutils-gold \
            bsd-compat-headers \
            gmp-dev \
            ncurses-dev \
            libffi-dev \
            make \
            xz \
            tar \
            perl \
            bash \
            git

          apk add --no-cache \
            zlib \
            zlib-dev \
            zlib-static \
            bzip2 \
            bzip2-dev \
            bzip2-static \
            gmp \
            gmp-dev \
            openssl-dev \
            openssl-libs-static \
            xz \
            xz-dev \
            ncurses-static

          curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | BOOTSTRAP_HASKELL_NONINTERACTIVE=1 BOOTSTRAP_HASKELL_MINIMAL=1 sh

      - name: Run release
        run: |
          source ~/.ghcup/env
          bash .github/scripts/release.sh
        env:
          ARTIFACT: ${{ matrix.ARTIFACT }}

      - name: set HOME
        run: echo "HOME=$HOME" >> $GITHUB_ENV
        shell: bash

      - name: Set ASSET_PATH
        run: echo "ASSET_PATH=$HOME/.local/bin/ghcup" >> $GITHUB_ENV
        shell: bash

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.draft_release.outputs.upload_url }}
          asset_path: ${{ env.ASSET_PATH }}
          asset_name: ghcup-${{ matrix.os }}
          asset_content_type: application/octet-stream

      - if: always()
        uses: actions/upload-artifact@v2
        with:
          name: plan.json
          path: ./dist-newstyle/cache/plan.json

  release-non-linux:
    name: Create Release non-linux
    needs: draft_release
    runs-on: ${{ matrix.os }}
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.13
      ARCH: 64
      GHC_VER: 9.2.4
      CABAL_VER: 3.6.2.0
    strategy:
      matrix:
        include:
          - os: macOS-10.15
            ARTIFACT: "x86_64-apple-darwin-ghcup"
          - os: windows-latest
            ARTIFACT: "x86_64-mingw64-ghcup"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - if: runner.os == 'macOS'
        name: Install git
        run: brew install git

      - name: Run release
        run: bash .github/scripts/release.sh
        env:
          ARTIFACT: ${{ matrix.ARTIFACT }}

      - name: set HOME
        run: echo "HOME=$HOME" >> $GITHUB_ENV
        shell: bash

      - name: Set ASSET_PATH
        run: echo "ASSET_PATH=$HOME/.local/bin/ghcup" >> $GITHUB_ENV
        shell: bash

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.draft_release.outputs.upload_url }}
          asset_path: ${{ env.ASSET_PATH }}
          asset_name: ghcup-${{ matrix.os }}
          asset_content_type: application/octet-stream

      - if: always()
        uses: actions/upload-artifact@v2
        with:
          name: plan.json
          path: ./dist-newstyle/cache/plan.json
