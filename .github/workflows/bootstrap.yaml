name: Bootstrap tests

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 2 * * *'

jobs:
  bootstrap:
    name: bootstrap
    runs-on: ${{ matrix.os }}
    env:
      BOOTSTRAP_HASKELL_CABAL_VERSION: 3.12.1.0
      BOOTSTRAP_HASKELL_GHC_VERSION: 9.6.7
      BOOTSTRAP_HASKELL_NONINTERACTIVE: yes
      ARCH: 64
      JSON_VERSION: "0.0.7"
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            DISTRO: Ubuntu
          - os: macOS-13
            DISTRO: na
          - os: windows-latest
            DISTRO: na
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - if: runner.os == 'Linux'
        name: Run bootstrap
        run: |
          sudo apt-get install -y libnuma-dev zlib1g-dev libgmp-dev libgmp10 libssl-dev liblzma-dev libbz2-dev git wget lsb-release software-properties-common gnupg2 apt-transport-https gcc autoconf automake build-essential curl gzip
          sh ./.github/scripts/bootstrap.sh
        env:
          DISTRO: ${{ matrix.DISTRO }}

      - if: runner.os == 'macOS'
        name: Run bootstrap
        run: sh ./.github/scripts/bootstrap.sh
        env:
          DISTRO: ${{ matrix.DISTRO }}

      - if: runner.os == 'Windows'
        name: Run bootstrap
        run: |
          $ErrorActionPreference = [System.Management.Automation.ActionPreference]::Stop
          $curDir = Get-Location
          Write-Host "Current Working Directory: $curDir"
          Set-ExecutionPolicy Bypass -Scope Process -Force;[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; try { & ([ScriptBlock]::Create((Invoke-WebRequest https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/scripts/bootstrap/bootstrap-haskell.ps1 -UseBasicParsing))) -InstallDir ${GITHUB_WORKSPACE} -BootstrapUrl ("{0}/scripts/bootstrap/bootstrap-haskell" -f $curDir) -InBash -Msys2Env "MINGW64" } catch { Write-Error $_ }
        shell: pwsh

  jfs:
    name: jfs
    runs-on: [self-hosted, Linux, ARM64, JFS]
    defaults:
      run:
        working-directory: /mnt/jfs
    env:
      BOOTSTRAP_HASKELL_CABAL_VERSION: 3.6.2.0
      BOOTSTRAP_HASKELL_GHC_VERSION: 8.10.7
      BOOTSTRAP_HASKELL_NONINTERACTIVE: yes
      GHCUP_INSTALL_BASE_PREFIX: "/mnt/jfs"
    steps:
      - uses: docker://hasufell/arm64v8-ubuntu-haskell:focal
        name: Cleanup
        with:
          args: "find . -mindepth 1 -maxdepth 1 -exec rm -rf -- {} +"

      - name: Checkout code
        uses: actions/checkout@v3

      - uses: docker://hasufell/arm64v8-ubuntu-haskell:focal
        name: Run build (arm64v8 linux)
        with:
          args: sh ./.github/scripts/bootstrap.sh
        env:
          BOOTSTRAP_HASKELL_CABAL_VERSION: ${{ env.BOOTSTRAP_HASKELL_CABAL_VERSION }}
          BOOTSTRAP_HASKELL_GHC_VERSION: ${{ env.BOOTSTRAP_HASKELL_GHC_VERSION }}
          BOOTSTRAP_HASKELL_NONINTERACTIVE: ${{ env.BOOTSTRAP_HASKELL_NONINTERACTIVE }}
          GHCUP_INSTALL_BASE_PREFIX: ${{ env.GHCUP_INSTALL_BASE_PREFIX }}

  some:
    name: some
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Test ghcup bug
        run: |
          ls -lah /usr/local/.ghcup/cache
          ghcup --version
          ghcup --verbose list



